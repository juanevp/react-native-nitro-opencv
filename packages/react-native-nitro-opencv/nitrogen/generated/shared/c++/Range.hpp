///
/// Range.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#if __has_include(<NitroModules/JSIConverter.hpp>)
#include <NitroModules/JSIConverter.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif
#if __has_include(<NitroModules/NitroDefines.hpp>)
#include <NitroModules/NitroDefines.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif





namespace margelo::nitro::nitroopencv {

  /**
   * A struct which can be represented as a JavaScript object (Range).
   */
  struct Range {
  public:
    double start     SWIFT_PRIVATE;
    double end     SWIFT_PRIVATE;

  public:
    Range() = default;
    explicit Range(double start, double end): start(start), end(end) {}
  };

} // namespace margelo::nitro::nitroopencv

namespace margelo::nitro {

  using namespace margelo::nitro::nitroopencv;

  // C++ Range <> JS Range (object)
  template <>
  struct JSIConverter<Range> final {
    static inline Range fromJSI(jsi::Runtime& runtime, const jsi::Value& arg) {
      jsi::Object obj = arg.asObject(runtime);
      return Range(
        JSIConverter<double>::fromJSI(runtime, obj.getProperty(runtime, "start")),
        JSIConverter<double>::fromJSI(runtime, obj.getProperty(runtime, "end"))
      );
    }
    static inline jsi::Value toJSI(jsi::Runtime& runtime, const Range& arg) {
      jsi::Object obj(runtime);
      obj.setProperty(runtime, "start", JSIConverter<double>::toJSI(runtime, arg.start));
      obj.setProperty(runtime, "end", JSIConverter<double>::toJSI(runtime, arg.end));
      return obj;
    }
    static inline bool canConvert(jsi::Runtime& runtime, const jsi::Value& value) {
      if (!value.isObject()) {
        return false;
      }
      jsi::Object obj = value.getObject(runtime);
      if (!JSIConverter<double>::canConvert(runtime, obj.getProperty(runtime, "start"))) return false;
      if (!JSIConverter<double>::canConvert(runtime, obj.getProperty(runtime, "end"))) return false;
      return true;
    }
  };

} // namespace margelo::nitro
