///
/// HybridImageTransformSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridImageTransformSpec.hpp"

namespace margelo::nitro::nitroopencv {

  void HybridImageTransformSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridMethod("getPerspectiveTransform", &HybridImageTransformSpec::getPerspectiveTransform);
      prototype.registerHybridMethod("resize", &HybridImageTransformSpec::resize);
      prototype.registerHybridMethod("resizeTo", &HybridImageTransformSpec::resizeTo);
      prototype.registerHybridMethod("resizeByScale", &HybridImageTransformSpec::resizeByScale);
      prototype.registerHybridMethod("warpAffine", &HybridImageTransformSpec::warpAffine);
      prototype.registerHybridMethod("warpPerspective", &HybridImageTransformSpec::warpPerspective);
    });
  }

} // namespace margelo::nitro::nitroopencv
