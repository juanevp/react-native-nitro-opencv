///
/// HybridImageIoSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridImageIoSpec.hpp"

namespace margelo::nitro::nitroopencv {

  void HybridImageIoSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridMethod("haveImageReader", &HybridImageIoSpec::haveImageReader);
      prototype.registerHybridMethod("haveImageWriter", &HybridImageIoSpec::haveImageWriter);
      prototype.registerHybridMethod("imcount", &HybridImageIoSpec::imcount);
      prototype.registerHybridMethod("imdecode", &HybridImageIoSpec::imdecode);
      prototype.registerHybridMethod("imdecodemulti", &HybridImageIoSpec::imdecodemulti);
      prototype.registerHybridMethod("imencode", &HybridImageIoSpec::imencode);
      prototype.registerHybridMethod("imencodemulti", &HybridImageIoSpec::imencodemulti);
      prototype.registerHybridMethod("imread", &HybridImageIoSpec::imread);
      prototype.registerHybridMethod("imreadmulti", &HybridImageIoSpec::imreadmulti);
      prototype.registerHybridMethod("imwrite", &HybridImageIoSpec::imwrite);
      prototype.registerHybridMethod("imwritemulti", &HybridImageIoSpec::imwritemulti);
    });
  }

} // namespace margelo::nitro::nitroopencv
