///
/// DataTypes.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <cmath>
#if __has_include(<NitroModules/JSIConverter.hpp>)
#include <NitroModules/JSIConverter.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif
#if __has_include(<NitroModules/NitroDefines.hpp>)
#include <NitroModules/NitroDefines.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif

namespace margelo::nitro::nitroopencv {

  /**
   * An enum which can be represented as a JavaScript enum (DataTypes).
   */
  enum class DataTypes {
    CV8U      SWIFT_NAME(cv8u) = 0,
    CV8S      SWIFT_NAME(cv8s) = 1,
    CV16U      SWIFT_NAME(cv16u) = 2,
    CV16S      SWIFT_NAME(cv16s) = 3,
    CV32S      SWIFT_NAME(cv32s) = 4,
    CV32F      SWIFT_NAME(cv32f) = 5,
    CV64F      SWIFT_NAME(cv64f) = 6,
    CV16F      SWIFT_NAME(cv16f) = 7,
    CV8UC1      SWIFT_NAME(cv8uc1) = 0,
    CV8UC2      SWIFT_NAME(cv8uc2) = 8,
    CV8UC3      SWIFT_NAME(cv8uc3) = 16,
    CV8UC4      SWIFT_NAME(cv8uc4) = 24,
    CV8SC1      SWIFT_NAME(cv8sc1) = 1,
    CV8SC2      SWIFT_NAME(cv8sc2) = 9,
    CV8SC3      SWIFT_NAME(cv8sc3) = 17,
    CV8SC4      SWIFT_NAME(cv8sc4) = 25,
    CV16UC1      SWIFT_NAME(cv16uc1) = 2,
    CV16UC2      SWIFT_NAME(cv16uc2) = 10,
    CV16UC3      SWIFT_NAME(cv16uc3) = 18,
    CV16UC4      SWIFT_NAME(cv16uc4) = 26,
    CV16SC1      SWIFT_NAME(cv16sc1) = 3,
    CV16SC2      SWIFT_NAME(cv16sc2) = 11,
    CV16SC3      SWIFT_NAME(cv16sc3) = 19,
    CV16SC4      SWIFT_NAME(cv16sc4) = 27,
    CV32SC1      SWIFT_NAME(cv32sc1) = 4,
    CV32SC2      SWIFT_NAME(cv32sc2) = 12,
    CV32SC3      SWIFT_NAME(cv32sc3) = 20,
    CV32SC4      SWIFT_NAME(cv32sc4) = 28,
    CV32FC1      SWIFT_NAME(cv32fc1) = 5,
    CV32FC2      SWIFT_NAME(cv32fc2) = 13,
    CV32FC3      SWIFT_NAME(cv32fc3) = 21,
    CV32FC4      SWIFT_NAME(cv32fc4) = 29,
    CV64FC1      SWIFT_NAME(cv64fc1) = 6,
    CV64FC2      SWIFT_NAME(cv64fc2) = 14,
    CV64FC3      SWIFT_NAME(cv64fc3) = 22,
    CV64FC4      SWIFT_NAME(cv64fc4) = 30,
    CV16FC1      SWIFT_NAME(cv16fc1) = 7,
    CV16FC2      SWIFT_NAME(cv16fc2) = 15,
    CV16FC3      SWIFT_NAME(cv16fc3) = 23,
    CV16FC4      SWIFT_NAME(cv16fc4) = 31,
  } CLOSED_ENUM;

} // namespace margelo::nitro::nitroopencv

namespace margelo::nitro {

  using namespace margelo::nitro::nitroopencv;

  // C++ DataTypes <> JS DataTypes (enum)
  template <>
  struct JSIConverter<DataTypes> final {
    static inline DataTypes fromJSI(jsi::Runtime& runtime, const jsi::Value& arg) {
      int enumValue = JSIConverter<int>::fromJSI(runtime, arg);
      return static_cast<DataTypes>(enumValue);
    }
    static inline jsi::Value toJSI(jsi::Runtime& runtime, DataTypes arg) {
      int enumValue = static_cast<int>(arg);
      return JSIConverter<int>::toJSI(runtime, enumValue);
    }
    static inline bool canConvert(jsi::Runtime&, const jsi::Value& value) {
      if (!value.isNumber()) {
        return false;
      }
      double integer;
      double fraction = modf(value.getNumber(), &integer);
      if (fraction != 0.0) {
        // It is some kind of floating point number - our enums are ints.
        return false;
      }
      // Check if we are within the bounds of the enum.
      return integer >= 0 && integer <= 39;
    }
  };

} // namespace margelo::nitro
