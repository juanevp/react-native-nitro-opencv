///
/// HybridCvMatSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridCvMatSpec.hpp"

namespace margelo::nitro::nitroopencv {

  void HybridCvMatSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridGetter("depth", &HybridCvMatSpec::getDepth);
      prototype.registerHybridGetter("channels", &HybridCvMatSpec::getChannels);
      prototype.registerHybridGetter("empty", &HybridCvMatSpec::getEmpty);
      prototype.registerHybridGetter("size", &HybridCvMatSpec::getSize);
      prototype.registerHybridGetter("cols", &HybridCvMatSpec::getCols);
      prototype.registerHybridGetter("rows", &HybridCvMatSpec::getRows);
      prototype.registerHybridGetter("base64", &HybridCvMatSpec::getBase64);
      prototype.registerHybridMethod("toBase64", &HybridCvMatSpec::toBase64);
      prototype.registerHybridMethod("toJsValue", &HybridCvMatSpec::toJsValue);
    });
  }

} // namespace margelo::nitro::nitroopencv
